{"ast":null,"code":"import { GET_ALL_GAMES, SEARCH_BY_NAME, GET_VIDEOGAME_DETAIL, GET_GENRES, ORDER_BY, FILTER_BY } from \"./Actions/constantes\";\nconst initialState = {\n  allGames: [],\n  gamesBackUp: [],\n  gameDetails: {},\n  genres: [],\n  filtered: []\n};\nexport default function rootReducer(state = initialState, action) {\n  switch (action.type) {\n    case GET_ALL_GAMES:\n      return {\n        ...state,\n        allGames: action.payload,\n        gamesBackUp: action.payload,\n        filtered: action.payload\n      };\n    case GET_VIDEOGAME_DETAIL:\n      return {\n        ...state,\n        gameDetails: action.payload\n      };\n    case SEARCH_BY_NAME:\n      return {\n        ...state,\n        gamesBackUp: action.payload,\n        filtered: action.payload\n      };\n    case GET_GENRES:\n      return {\n        ...state,\n        genres: action.payload\n      };\n    case FILTER_BY:\n      if (action.payload === 'default') {\n        return {\n          ...state,\n          filtered: state.gamesBackUp\n        };\n      } else if (action.payload === 'DB') {\n        const filteredGames = state.gamesBackUp.filter(game => typeof game.id === 'string');\n        return {\n          ...state,\n          filtered: filteredGames\n        };\n      } else if (action.payload === 'API') {\n        const filteredGames = state.gamesBackUp.filter(game => typeof game.id === 'number');\n        return {\n          ...state,\n          filtered: filteredGames\n        };\n      } else {\n        const filteredGamesByGenre = state.gamesBackUp.filter(game => game.genres.some(genre => genre.name.toLowerCase() === action.payload.toLowerCase()));\n        return {\n          ...state,\n          filtered: [...filteredGamesByGenre]\n        };\n      }\n    case ORDER_BY:\n      if (action.payload === 'A-Z') {\n        return {\n          ...state,\n          filtered: [...state.filtered].sort((prev, next) => {\n            if (prev.name > next.name) return 1;\n            if (prev.name < next.name) return -1;\n            return 0;\n          })\n        };\n      } else if (action.payload === 'Z-A') {\n        return {\n          ...state,\n          filtered: [...state.filtered].sort((prev, next) => {\n            if (prev.name > next.name) return -1;\n            if (prev.name < next.name) return 1;\n            return 0;\n          })\n        };\n      } else if (action.payload === 'desc') {\n        return {\n          ...state,\n          filtered: [...state.filtered].sort((prev, next) => prev.rating - next.rating)\n        };\n      } else if (action.payload === 'asc') {\n        return {\n          ...state,\n          filtered: [...state.filtered].sort((prev, next) => next.rating - prev.rating)\n        };\n      } else {\n        return {\n          ...state,\n          filtered: state.gamesBackUp\n        };\n      }\n      ;\n    default:\n      return state;\n  }\n}\n;","map":{"version":3,"names":["GET_ALL_GAMES","SEARCH_BY_NAME","GET_VIDEOGAME_DETAIL","GET_GENRES","ORDER_BY","FILTER_BY","initialState","allGames","gamesBackUp","gameDetails","genres","filtered","rootReducer","state","action","type","payload","filteredGames","filter","game","id","filteredGamesByGenre","some","genre","name","toLowerCase","sort","prev","next","rating"],"sources":["C:/Users/mirko/Desktop/Proyecto Individual Mirko Miler FT-45B/Proyecto-Individual/PI-Videogames-main/client/src/redux/reducers.js"],"sourcesContent":["import {\r\n    GET_ALL_GAMES,\r\n    SEARCH_BY_NAME,\r\n    GET_VIDEOGAME_DETAIL,\r\n    GET_GENRES,\r\n    ORDER_BY,\r\n    FILTER_BY\r\n  } from \"./Actions/constantes\";\r\n  \r\n  const initialState = {\r\n    allGames: [],\r\n    gamesBackUp: [],\r\n    gameDetails: {},\r\n    genres: [],\r\n    filtered: []\r\n  };\r\n  \r\n  export default function rootReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n      case GET_ALL_GAMES:\r\n        return {\r\n          ...state,\r\n          allGames: action.payload,\r\n          gamesBackUp: action.payload,\r\n          filtered: action.payload\r\n        };\r\n      case GET_VIDEOGAME_DETAIL:\r\n        return {\r\n          ...state,\r\n          gameDetails: action.payload\r\n        };\r\n  \r\n      case SEARCH_BY_NAME:\r\n        return {\r\n          ...state,\r\n          gamesBackUp: action.payload,\r\n          filtered: action.payload\r\n        };\r\n  \r\n      case GET_GENRES:\r\n        return {\r\n          ...state,\r\n          genres: action.payload\r\n        };\r\n  \r\n      case FILTER_BY:\r\n        if (action.payload === 'default') {\r\n          return { ...state, filtered: state.gamesBackUp };\r\n        } else if (action.payload === 'DB') {\r\n          const filteredGames = state.gamesBackUp.filter((game) => typeof game.id === 'string');\r\n          return { ...state, filtered: filteredGames };\r\n        } else if (action.payload === 'API') {\r\n          const filteredGames = state.gamesBackUp.filter((game) => typeof game.id === 'number');\r\n          return { ...state, filtered: filteredGames };\r\n        } else {\r\n          const filteredGamesByGenre = state.gamesBackUp.filter((game) =>\r\n            game.genres.some((genre) => genre.name.toLowerCase() === action.payload.toLowerCase())\r\n          );\r\n          return { ...state, filtered: [...filteredGamesByGenre] };\r\n        }\r\n  \r\n      case ORDER_BY:\r\n        if (action.payload === 'A-Z') {\r\n          return { ...state, filtered: [...state.filtered].sort((prev, next) => {\r\n            if (prev.name > next.name) return 1\r\n            if (prev.name < next.name) return -1\r\n            return 0\r\n          })}\r\n        } else if (action.payload === 'Z-A') {\r\n          return { ...state, filtered: [...state.filtered].sort((prev, next) => {\r\n            if (prev.name > next.name) return -1\r\n            if (prev.name < next.name) return 1\r\n            return 0\r\n          })}\r\n        } else if (action.payload === 'desc') {\r\n          return { ...state, filtered: [...state.filtered].sort((prev, next) => prev.rating - next.rating) }\r\n        } else if (action.payload === 'asc') {\r\n          return { ...state, filtered: [...state.filtered].sort((prev, next) => next.rating - prev.rating) }\r\n        } else {\r\n          return { ...state, filtered: state.gamesBackUp }\r\n        };\r\n  \r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n  "],"mappings":"AAAA,SACIA,aAAa,EACbC,cAAc,EACdC,oBAAoB,EACpBC,UAAU,EACVC,QAAQ,EACRC,SAAS,QACJ,sBAAsB;AAE7B,MAAMC,YAAY,GAAG;EACnBC,QAAQ,EAAE,EAAE;EACZC,WAAW,EAAE,EAAE;EACfC,WAAW,EAAE,CAAC,CAAC;EACfC,MAAM,EAAE,EAAE;EACVC,QAAQ,EAAE;AACZ,CAAC;AAED,eAAe,SAASC,WAAWA,CAACC,KAAK,GAAGP,YAAY,EAAEQ,MAAM,EAAE;EAChE,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAKf,aAAa;MAChB,OAAO;QACL,GAAGa,KAAK;QACRN,QAAQ,EAAEO,MAAM,CAACE,OAAO;QACxBR,WAAW,EAAEM,MAAM,CAACE,OAAO;QAC3BL,QAAQ,EAAEG,MAAM,CAACE;MACnB,CAAC;IACH,KAAKd,oBAAoB;MACvB,OAAO;QACL,GAAGW,KAAK;QACRJ,WAAW,EAAEK,MAAM,CAACE;MACtB,CAAC;IAEH,KAAKf,cAAc;MACjB,OAAO;QACL,GAAGY,KAAK;QACRL,WAAW,EAAEM,MAAM,CAACE,OAAO;QAC3BL,QAAQ,EAAEG,MAAM,CAACE;MACnB,CAAC;IAEH,KAAKb,UAAU;MACb,OAAO;QACL,GAAGU,KAAK;QACRH,MAAM,EAAEI,MAAM,CAACE;MACjB,CAAC;IAEH,KAAKX,SAAS;MACZ,IAAIS,MAAM,CAACE,OAAO,KAAK,SAAS,EAAE;QAChC,OAAO;UAAE,GAAGH,KAAK;UAAEF,QAAQ,EAAEE,KAAK,CAACL;QAAY,CAAC;MAClD,CAAC,MAAM,IAAIM,MAAM,CAACE,OAAO,KAAK,IAAI,EAAE;QAClC,MAAMC,aAAa,GAAGJ,KAAK,CAACL,WAAW,CAACU,MAAM,CAAEC,IAAI,IAAK,OAAOA,IAAI,CAACC,EAAE,KAAK,QAAQ,CAAC;QACrF,OAAO;UAAE,GAAGP,KAAK;UAAEF,QAAQ,EAAEM;QAAc,CAAC;MAC9C,CAAC,MAAM,IAAIH,MAAM,CAACE,OAAO,KAAK,KAAK,EAAE;QACnC,MAAMC,aAAa,GAAGJ,KAAK,CAACL,WAAW,CAACU,MAAM,CAAEC,IAAI,IAAK,OAAOA,IAAI,CAACC,EAAE,KAAK,QAAQ,CAAC;QACrF,OAAO;UAAE,GAAGP,KAAK;UAAEF,QAAQ,EAAEM;QAAc,CAAC;MAC9C,CAAC,MAAM;QACL,MAAMI,oBAAoB,GAAGR,KAAK,CAACL,WAAW,CAACU,MAAM,CAAEC,IAAI,IACzDA,IAAI,CAACT,MAAM,CAACY,IAAI,CAAEC,KAAK,IAAKA,KAAK,CAACC,IAAI,CAACC,WAAW,CAAC,CAAC,KAAKX,MAAM,CAACE,OAAO,CAACS,WAAW,CAAC,CAAC,CACvF,CAAC;QACD,OAAO;UAAE,GAAGZ,KAAK;UAAEF,QAAQ,EAAE,CAAC,GAAGU,oBAAoB;QAAE,CAAC;MAC1D;IAEF,KAAKjB,QAAQ;MACX,IAAIU,MAAM,CAACE,OAAO,KAAK,KAAK,EAAE;QAC5B,OAAO;UAAE,GAAGH,KAAK;UAAEF,QAAQ,EAAE,CAAC,GAAGE,KAAK,CAACF,QAAQ,CAAC,CAACe,IAAI,CAAC,CAACC,IAAI,EAAEC,IAAI,KAAK;YACpE,IAAID,IAAI,CAACH,IAAI,GAAGI,IAAI,CAACJ,IAAI,EAAE,OAAO,CAAC;YACnC,IAAIG,IAAI,CAACH,IAAI,GAAGI,IAAI,CAACJ,IAAI,EAAE,OAAO,CAAC,CAAC;YACpC,OAAO,CAAC;UACV,CAAC;QAAC,CAAC;MACL,CAAC,MAAM,IAAIV,MAAM,CAACE,OAAO,KAAK,KAAK,EAAE;QACnC,OAAO;UAAE,GAAGH,KAAK;UAAEF,QAAQ,EAAE,CAAC,GAAGE,KAAK,CAACF,QAAQ,CAAC,CAACe,IAAI,CAAC,CAACC,IAAI,EAAEC,IAAI,KAAK;YACpE,IAAID,IAAI,CAACH,IAAI,GAAGI,IAAI,CAACJ,IAAI,EAAE,OAAO,CAAC,CAAC;YACpC,IAAIG,IAAI,CAACH,IAAI,GAAGI,IAAI,CAACJ,IAAI,EAAE,OAAO,CAAC;YACnC,OAAO,CAAC;UACV,CAAC;QAAC,CAAC;MACL,CAAC,MAAM,IAAIV,MAAM,CAACE,OAAO,KAAK,MAAM,EAAE;QACpC,OAAO;UAAE,GAAGH,KAAK;UAAEF,QAAQ,EAAE,CAAC,GAAGE,KAAK,CAACF,QAAQ,CAAC,CAACe,IAAI,CAAC,CAACC,IAAI,EAAEC,IAAI,KAAKD,IAAI,CAACE,MAAM,GAAGD,IAAI,CAACC,MAAM;QAAE,CAAC;MACpG,CAAC,MAAM,IAAIf,MAAM,CAACE,OAAO,KAAK,KAAK,EAAE;QACnC,OAAO;UAAE,GAAGH,KAAK;UAAEF,QAAQ,EAAE,CAAC,GAAGE,KAAK,CAACF,QAAQ,CAAC,CAACe,IAAI,CAAC,CAACC,IAAI,EAAEC,IAAI,KAAKA,IAAI,CAACC,MAAM,GAAGF,IAAI,CAACE,MAAM;QAAE,CAAC;MACpG,CAAC,MAAM;QACL,OAAO;UAAE,GAAGhB,KAAK;UAAEF,QAAQ,EAAEE,KAAK,CAACL;QAAY,CAAC;MAClD;MAAC;IAEH;MACE,OAAOK,KAAK;EAChB;AACF;AAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}