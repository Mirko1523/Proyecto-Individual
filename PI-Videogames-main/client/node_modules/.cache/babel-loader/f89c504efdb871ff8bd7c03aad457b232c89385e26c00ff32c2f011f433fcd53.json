{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mirko\\\\Desktop\\\\Proyecto Individual Mirko Miler FT-45B\\\\Proyecto-Individual\\\\PI-Videogames-main\\\\client\\\\src\\\\components\\\\Homepage\\\\homepage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Nav from '../Nav/nav';\nimport Searchbar from '../SearchBar/searchbar';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getAllGames, getGenres } from '../../actions/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Videogames() {\n  _s();\n  console.log('se ejetuto el constructor');\n  let allGames = useSelector(state => state.filtered); //me traigo el estado global\n  const dispatch = useDispatch(); //meto el metodo en una variable\n  const [currentPage, setCurrentPage] = useState(1); // estado de la página actual\n\n  const [cardPerPage] = useState(15); // cantidad de cards por página\n\n  //* indices de la paginación:\n  const indexOfLastCard = currentPage * cardPerPage; // valor (15)\n  const indexOfFirstCard = indexOfLastCard - cardPerPage; // valor (0)\n\n  const currentCards = allGames.slice(indexOfFirstCard, indexOfLastCard); // declara en la constante currentCards los \"cards\" que se deben mostrar en la pantalla (15)\n\n  useEffect(() => {\n    console.log('se monto');\n    if (allGames.length === 0) {\n      // si no hay juegos cargados en el estado global, entonces los carga\n      dispatch(getAllGames()); //despacho la accion al reducer\n      dispatch(getGenres());\n    } //despacho la accion al reducer\n  }, [allGames.length, dispatch]); //si el estado de allGames cambia, se ejecuta el useEffect\n\n  useEffect(() => {\n    return () => console.log('se desmonto');\n  }, []); //indico que quiero que haga una vez desmontado\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Searchbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 7\n  }, this);\n}\n_s(Videogames, \"KYty+1nNzeduskjsaFKTMhnLkcc=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = Videogames;\nvar _c;\n$RefreshReg$(_c, \"Videogames\");","map":{"version":3,"names":["React","useState","useEffect","Nav","Searchbar","useDispatch","useSelector","getAllGames","getGenres","jsxDEV","_jsxDEV","Videogames","_s","console","log","allGames","state","filtered","dispatch","currentPage","setCurrentPage","cardPerPage","indexOfLastCard","indexOfFirstCard","currentCards","slice","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/mirko/Desktop/Proyecto Individual Mirko Miler FT-45B/Proyecto-Individual/PI-Videogames-main/client/src/components/Homepage/homepage.jsx"],"sourcesContent":["import React, {useState, useEffect } from 'react'\r\nimport Nav from '../Nav/nav'\r\nimport Searchbar from '../SearchBar/searchbar'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getAllGames, getGenres } from '../../actions/actions'\r\n\r\n\r\nexport default function Videogames() {\r\n\r\n console.log('se ejetuto el constructor')\r\n  let allGames = useSelector((state) => state.filtered);//me traigo el estado global\r\n  const dispatch = useDispatch()//meto el metodo en una variable\r\n  const [currentPage, setCurrentPage] = useState(1) // estado de la página actual\r\n\r\n    const [cardPerPage] = useState(15) // cantidad de cards por página\r\n\r\n    //* indices de la paginación:\r\n    const indexOfLastCard = currentPage * cardPerPage // valor (15)\r\n    const indexOfFirstCard = indexOfLastCard - cardPerPage; // valor (0)\r\n\r\n    \r\n       const currentCards = allGames.slice(indexOfFirstCard, indexOfLastCard) // declara en la constante currentCards los \"cards\" que se deben mostrar en la pantalla (15)\r\n    \r\n\r\n    useEffect (() => {\r\n      console.log('se monto')\r\n      if (allGames.length === 0 ){ // si no hay juegos cargados en el estado global, entonces los carga\r\n        dispatch(getAllGames())//despacho la accion al reducer\r\n        dispatch(getGenres())} //despacho la accion al reducer\r\n        },[allGames.length, dispatch])  //si el estado de allGames cambia, se ejecuta el useEffect\r\n       \r\n        useEffect (() => { \r\n    return()=>console.log('se desmonto') },[]) //indico que quiero que haga una vez desmontado\r\n\r\n    return (\r\n      <div className=\"container\"> \r\n        <Nav /> \r\n        <Searchbar />\r\n       \r\n      </div>\r\n    );\r\n}\r\n\r\n\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACjD,OAAOC,GAAG,MAAM,YAAY;AAC5B,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,WAAW,EAAEC,SAAS,QAAQ,uBAAuB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAG9D,eAAe,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EAEpCC,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;EACvC,IAAIC,QAAQ,GAAGT,WAAW,CAAEU,KAAK,IAAKA,KAAK,CAACC,QAAQ,CAAC,CAAC;EACtD,MAAMC,QAAQ,GAAGb,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACc,WAAW,EAAEC,cAAc,CAAC,GAAGnB,QAAQ,CAAC,CAAC,CAAC,EAAC;;EAEhD,MAAM,CAACoB,WAAW,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC,EAAC;;EAEnC;EACA,MAAMqB,eAAe,GAAGH,WAAW,GAAGE,WAAW,EAAC;EAClD,MAAME,gBAAgB,GAAGD,eAAe,GAAGD,WAAW,CAAC,CAAC;;EAGrD,MAAMG,YAAY,GAAGT,QAAQ,CAACU,KAAK,CAACF,gBAAgB,EAAED,eAAe,CAAC,EAAC;;EAG1EpB,SAAS,CAAE,MAAM;IACfW,OAAO,CAACC,GAAG,CAAC,UAAU,CAAC;IACvB,IAAIC,QAAQ,CAACW,MAAM,KAAK,CAAC,EAAE;MAAE;MAC3BR,QAAQ,CAACX,WAAW,CAAC,CAAC,CAAC;MACvBW,QAAQ,CAACV,SAAS,CAAC,CAAC,CAAC;IAAA,CAAC,CAAC;EACvB,CAAC,EAAC,CAACO,QAAQ,CAACW,MAAM,EAAER,QAAQ,CAAC,CAAC,EAAE;;EAEhChB,SAAS,CAAE,MAAM;IACrB,OAAM,MAAIW,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;EAAC,CAAC,EAAC,EAAE,CAAC,EAAC;;EAE3C,oBACEJ,OAAA;IAAKiB,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBlB,OAAA,CAACP,GAAG;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACPtB,OAAA,CAACN,SAAS;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEV,CAAC;AAEZ;AAACpB,EAAA,CAlCuBD,UAAU;EAAA,QAGjBL,WAAW,EACTD,WAAW;AAAA;AAAA4B,EAAA,GAJNtB,UAAU;AAAA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}