{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mirko\\\\Desktop\\\\Proyecto Individual Mirko Miler FT-45B\\\\Proyecto-Individual\\\\PI-Videogames-main\\\\client\\\\src\\\\components\\\\Videogames\\\\videogames.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport NavBar from '../Nav/nav';\nimport SearchBar from '../SearchBar/searchbar';\nimport FilteredBy from '../Filter/filter';\nimport { connect } from 'react-redux';\nimport Videogame from '../Videogamelist/videogamelist';\nimport Pagination from '../Pagination/pagination';\nimport { getAllGames, getGenres } from '../../redux/Actions/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Videogames({\n  allGames,\n  getAllGames,\n  getGenres\n}) {\n  _s();\n  const [currentPage, setCurrentPage] = useState(1);\n  const [cardPerPage] = useState(15);\n\n  // Indices de la paginación:\n  const indexOfLastCard = currentPage * cardPerPage;\n  const indexOfFirstCard = indexOfLastCard - cardPerPage;\n\n  // Cards que se deben mostrar en la pantalla\n  const currentCards = typeof allGames === 'string' ? allGames : allGames.slice(indexOfFirstCard, indexOfLastCard);\n  const paginate = pageNumber => {\n    setCurrentPage(pageNumber);\n  };\n  useEffect(() => {\n    getAllGames();\n    getGenres();\n  }, [getAllGames, getGenres]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FilteredBy, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      cardPerPage: cardPerPage,\n      totalCards: allGames.length,\n      paginate: paginate,\n      currentPage: currentPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"games-div\",\n      children: currentCards && (currentCards.length > 1 ? currentCards.map(g => /*#__PURE__*/_jsxDEV(Videogame, {\n        name: g.name,\n        rating: g.rating,\n        genres: g.genres,\n        image: g.background_image,\n        id: g.id\n      }, g.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 15\n      }, this)) : typeof currentCards === 'string' && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: currentCards\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 51\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      cardPerPage: cardPerPage,\n      totalCards: allGames.length,\n      paginate: paginate,\n      currentPage: currentPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(Videogames, \"yzrnDe8ObmuiXlK7nRIX8d0adAo=\");\n_c = Videogames;\nconst mapStateToProps = state => {\n  return {\n    allGames: state.filtered\n  };\n};\nexport default connect(mapStateToProps, {\n  getAllGames,\n  getGenres\n})(Videogames);\nvar _c;\n$RefreshReg$(_c, \"Videogames\");","map":{"version":3,"names":["React","useState","useEffect","NavBar","SearchBar","FilteredBy","connect","Videogame","Pagination","getAllGames","getGenres","jsxDEV","_jsxDEV","Videogames","allGames","_s","currentPage","setCurrentPage","cardPerPage","indexOfLastCard","indexOfFirstCard","currentCards","slice","paginate","pageNumber","className","children","fileName","_jsxFileName","lineNumber","columnNumber","totalCards","length","map","g","name","rating","genres","image","background_image","id","_c","mapStateToProps","state","filtered","$RefreshReg$"],"sources":["C:/Users/mirko/Desktop/Proyecto Individual Mirko Miler FT-45B/Proyecto-Individual/PI-Videogames-main/client/src/components/Videogames/videogames.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport NavBar from '../Nav/nav';\r\nimport SearchBar from '../SearchBar/searchbar';\r\nimport FilteredBy from '../Filter/filter';\r\nimport { connect } from 'react-redux';\r\nimport Videogame from '../Videogamelist/videogamelist';\r\nimport Pagination from '../Pagination/pagination';\r\nimport { getAllGames, getGenres } from '../../redux/Actions/actions';\r\n\r\nfunction Videogames({ allGames, getAllGames, getGenres }) {\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [cardPerPage] = useState(15);\r\n\r\n  // Indices de la paginación:\r\n  const indexOfLastCard = currentPage * cardPerPage;\r\n  const indexOfFirstCard = indexOfLastCard - cardPerPage;\r\n\r\n  // Cards que se deben mostrar en la pantalla\r\n  const currentCards =\r\n    typeof allGames === 'string'\r\n      ? allGames\r\n      : allGames.slice(indexOfFirstCard, indexOfLastCard);\r\n\r\n  const paginate = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getAllGames();\r\n    getGenres();\r\n  }, [getAllGames, getGenres]);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <NavBar />\r\n      <SearchBar />\r\n      <FilteredBy />\r\n      <Pagination\r\n        cardPerPage={cardPerPage}\r\n        totalCards={allGames.length}\r\n        paginate={paginate}\r\n        currentPage={currentPage}\r\n      />\r\n      <div className=\"games-div\">\r\n        {currentCards &&\r\n          (currentCards.length > 1 ? (\r\n            currentCards.map((g) => (\r\n              <Videogame\r\n                key={g.id}\r\n                name={g.name}\r\n                rating={g.rating}\r\n                genres={g.genres}\r\n                image={g.background_image}\r\n                id={g.id}\r\n              />\r\n            ))\r\n          ) : typeof currentCards === 'string' && <p>{currentCards}</p>)}\r\n      </div>\r\n      <Pagination\r\n        cardPerPage={cardPerPage}\r\n        totalCards={allGames.length}\r\n        paginate={paginate}\r\n        currentPage={currentPage}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    allGames: state.filtered,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { getAllGames, getGenres })(Videogames);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}