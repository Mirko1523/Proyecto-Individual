{"ast":null,"code":"// import React, { useState, useEffect } from 'react';\n// import { Link } from 'react-router-dom';\n// import Nav from '../Nav/nav';\n// import SearchBar from '../SearchBar/searchbar';\n// import Filter from '../Filter/filter';\n// import { connect } from 'react-redux';\n// import Pagination from '../Pagination/pagination';\n// import { getAllGames, getGenres } from '../../redux/Actions/actions';\n// import imagen3 from '../../IMG/god-ofwar-4-4k-m7.jpg';\n// import './videogames.css';\n\n// function Videogames({ allGames, getAllGames, getGenres }) {\n//   const [currentPage, setCurrentPage] = useState(1);\n//   const [cardPerPage] = useState(4);\n\n//   const indexOfLastCard = currentPage * cardPerPage;\n//   const indexOfFirstCard = indexOfLastCard - cardPerPage;\n\n//   const currentCards = allGames.slice(indexOfFirstCard, indexOfLastCard);\n\n//   const paginate = (pageNumber) => {\n//     setCurrentPage(pageNumber);\n//   };\n\n//   useEffect(() => {\n//     getAllGames();\n//     getGenres();\n//   }, [getAllGames, getGenres]);\n\n//   return (\n//     <div className=\"Principal-container\">\n//       <Nav />\n//       <SearchBar />\n//       <Filter />\n\n//       <Pagination\n//         cardPerPage={cardPerPage}\n//         totalCards={allGames.length}\n//         paginate={paginate}\n//         currentPage={currentPage}\n//       />\n//       <div className=\"games-div\">\n//         {currentCards.length > 0 ? (\n//           currentCards.map((game) => (\n//             <Link key={game.id} to={`/details/${game.id}`}>\n//               <div className=\"game-card\">\n//                 <h2>{game.name}</h2>\n//                 <img\n//                   src={game.background_image}\n//                   alt={game.name}\n//                   className=\"game-card-img\"\n//                 />\n//                 <p>Rating: {game.rating}</p>\n//                 <p>Genres: {game.genres.map((e, index) => (\n//                   <span key={e.id}>\n//                     {game.genres.length > (index + 1) ? `${e.name}, ` : `${e.name}.`}\n//                   </span>\n//                 ))}\n//                 </p>\n//               </div>\n//             </Link>\n//           ))\n//         ) : (\n//           <p>No hay juegos para mostrar.</p>\n//         )}\n//       </div>\n\n//       <Pagination\n//         cardPerPage={cardPerPage}\n//         totalCards={allGames.length}\n//         paginate={paginate}\n//         currentPage={currentPage}\n//       />\n//       <img src={imagen3} alt=\"Banner\" className=\"banner-image\" />\n//     </div>\n//   );\n// }\n\n// const mapStateToProps = (state) => {\n//   return {\n//     allGames: state.filtered,\n//     searchResult: state.searchResult, \n//   };\n// };\n\n// export default connect(mapStateToProps, { getAllGames, getGenres })(Videogames);","map":{"version":3,"names":[],"sources":["C:/Users/mirko/Desktop/Proyecto Individual Mirko Miler FT-45B/Proyecto-Individual/PI-Videogames-main/client/src/components/Videogames/videogames.jsx"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import { Link } from 'react-router-dom';\r\n// import Nav from '../Nav/nav';\r\n// import SearchBar from '../SearchBar/searchbar';\r\n// import Filter from '../Filter/filter';\r\n// import { connect } from 'react-redux';\r\n// import Pagination from '../Pagination/pagination';\r\n// import { getAllGames, getGenres } from '../../redux/Actions/actions';\r\n// import imagen3 from '../../IMG/god-ofwar-4-4k-m7.jpg';\r\n// import './videogames.css';\r\n\r\n\r\n// function Videogames({ allGames, getAllGames, getGenres }) {\r\n//   const [currentPage, setCurrentPage] = useState(1);\r\n//   const [cardPerPage] = useState(4);\r\n\r\n//   const indexOfLastCard = currentPage * cardPerPage;\r\n//   const indexOfFirstCard = indexOfLastCard - cardPerPage;\r\n\r\n//   const currentCards = allGames.slice(indexOfFirstCard, indexOfLastCard);\r\n\r\n//   const paginate = (pageNumber) => {\r\n//     setCurrentPage(pageNumber);\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     getAllGames();\r\n//     getGenres();\r\n//   }, [getAllGames, getGenres]);\r\n\r\n//   return (\r\n//     <div className=\"Principal-container\">\r\n//       <Nav />\r\n//       <SearchBar />\r\n//       <Filter />\r\n \r\n//       <Pagination\r\n//         cardPerPage={cardPerPage}\r\n//         totalCards={allGames.length}\r\n//         paginate={paginate}\r\n//         currentPage={currentPage}\r\n//       />\r\n//       <div className=\"games-div\">\r\n//         {currentCards.length > 0 ? (\r\n//           currentCards.map((game) => (\r\n//             <Link key={game.id} to={`/details/${game.id}`}>\r\n//               <div className=\"game-card\">\r\n//                 <h2>{game.name}</h2>\r\n//                 <img\r\n//                   src={game.background_image}\r\n//                   alt={game.name}\r\n//                   className=\"game-card-img\"\r\n//                 />\r\n//                 <p>Rating: {game.rating}</p>\r\n//                 <p>Genres: {game.genres.map((e, index) => (\r\n//                   <span key={e.id}>\r\n//                     {game.genres.length > (index + 1) ? `${e.name}, ` : `${e.name}.`}\r\n//                   </span>\r\n//                 ))}\r\n//                 </p>\r\n//               </div>\r\n//             </Link>\r\n//           ))\r\n//         ) : (\r\n//           <p>No hay juegos para mostrar.</p>\r\n//         )}\r\n//       </div>\r\n\r\n//       <Pagination\r\n//         cardPerPage={cardPerPage}\r\n//         totalCards={allGames.length}\r\n//         paginate={paginate}\r\n//         currentPage={currentPage}\r\n//       />\r\n//       <img src={imagen3} alt=\"Banner\" className=\"banner-image\" />\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// const mapStateToProps = (state) => {\r\n//   return {\r\n//     allGames: state.filtered,\r\n//     searchResult: state.searchResult, \r\n//   };\r\n// };\r\n\r\n// export default connect(mapStateToProps, { getAllGames, getGenres })(Videogames);\r\n\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}