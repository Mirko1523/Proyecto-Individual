{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mirko\\\\Desktop\\\\Proyecto Individual Mirko Miler FT-45B\\\\Proyecto-Individual\\\\PI-Videogames-main\\\\client\\\\src\\\\components\\\\Videogames\\\\videogames.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import { Link } from 'react-router-dom';\n// import Nav from '../Nav/nav';\n// import SearchBar from '../SearchBar/searchbar';\n// import Filter from '../Filter/filter';\n// import { connect } from 'react-redux';\n// import Pagination from '../Pagination/pagination';\n// import { getAllGames, getGenres } from '../../redux/Actions/actions';\n// import imagen3 from '../../IMG/god-ofwar-4-4k-m7.jpg';\n// import './videogames.css';\n\n// function Videogames({ allGames, getAllGames, getGenres }) {\n//   const [currentPage, setCurrentPage] = useState(1);\n//   const [cardPerPage] = useState(4);\n\n//   const indexOfLastCard = currentPage * cardPerPage;\n//   const indexOfFirstCard = indexOfLastCard - cardPerPage;\n\n//   const currentCards = allGames.slice(indexOfFirstCard, indexOfLastCard);\n\n//   const paginate = (pageNumber) => {\n//     setCurrentPage(pageNumber);\n//   };\n\n//   useEffect(() => {\n//     getAllGames();\n//     getGenres();\n//   }, [getAllGames, getGenres]);\n\n//   return (\n//     <div className=\"Principal-container\">\n//       <Nav />\n//       <SearchBar />\n//       <Filter />\n\n//       <Pagination\n//         cardPerPage={cardPerPage}\n//         totalCards={allGames.length}\n//         paginate={paginate}\n//         currentPage={currentPage}\n//       />\n//       <div className=\"games-div\">\n//         {currentCards.length > 0 ? (\n//           currentCards.map((game) => (\n//             <Link key={game.id} to={`/details/${game.id}`}>\n//               <div className=\"game-card\">\n//                 <h2>{game.name}</h2>\n//                 <img\n//                   src={game.background_image}\n//                   alt={game.name}\n//                   className=\"game-card-img\"\n//                 />\n//                 <p>Rating: {game.rating}</p>\n//                 <p>Genres: {game.genres.map((e, index) => (\n//                   <span key={e.id}>\n//                     {game.genres.length > (index + 1) ? `${e.name}, ` : `${e.name}.`}\n//                   </span>\n//                 ))}\n//                 </p>\n//               </div>\n//             </Link>\n//           ))\n//         ) : (\n//           <p>No hay juegos para mostrar.</p>\n//         )}\n//       </div>\n\n//       <Pagination\n//         cardPerPage={cardPerPage}\n//         totalCards={allGames.length}\n//         paginate={paginate}\n//         currentPage={currentPage}\n//       />\n//       <img src={imagen3} alt=\"Banner\" className=\"banner-image\" />\n//     </div>\n//   );\n// }\n\n// const mapStateToProps = (state) => {\n//   return {\n//     allGames: state.filtered,\n//     searchResult: state.searchResult, \n//   };\n// };\n\n// export default connect(mapStateToProps, { getAllGames, getGenres })(Videogames);\n\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport Nav from '../Nav/nav';\nimport SearchBar from '../SearchBar/searchbar';\nimport Filter from '../Filter/filter';\nimport { connect } from 'react-redux';\nimport Pagination from '../Pagination/pagination';\nimport { getAllGames, getGenres, searchByName } from '../../redux/Actions/actions';\nimport imagen3 from '../../IMG/god-ofwar-4-4k-m7.jpg';\nimport './videogames.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Videogames({\n  allGames,\n  searchResult,\n  getAllGames,\n  getGenres,\n  searchByName\n}) {\n  _s();\n  const [currentPage, setCurrentPage] = useState(1);\n  const [cardPerPage] = useState(4);\n  const indexOfLastCard = currentPage * cardPerPage;\n  const indexOfFirstCard = indexOfLastCard - cardPerPage;\n  const currentCards = (searchResult.length > 0 ? searchResult : allGames).slice(indexOfFirstCard, indexOfLastCard);\n  const paginate = pageNumber => {\n    setCurrentPage(pageNumber);\n  };\n  useEffect(() => {\n    getAllGames();\n    getGenres();\n  }, [getAllGames, getGenres]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Principal-container\",\n    children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Filter, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      cardPerPage: cardPerPage,\n      totalCards: (searchResult.length > 0 ? searchResult : allGames).length,\n      paginate: paginate,\n      currentPage: currentPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"games-div\",\n      children: searchResult.length > 0 ? currentCards.map(game => /*#__PURE__*/_jsxDEV(Link, {\n        to: `/details/${game.id}`,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"game-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: game.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: game.background_image,\n            alt: game.name,\n            className: \"game-card-img\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Rating: \", game.rating]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Genres: \", game.genres.map((e, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n              children: game.genres.length > index + 1 ? `${e.name}, ` : `${e.name}.`\n            }, e.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 15\n        }, this)\n      }, game.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No hay juegos para mostrar.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      cardPerPage: cardPerPage,\n      totalCards: (searchResult.length > 0 ? searchResult : allGames).length,\n      paginate: paginate,\n      currentPage: currentPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: imagen3,\n      alt: \"Banner\",\n      className: \"banner-image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 5\n  }, this);\n}\n_s(Videogames, \"tyo2nvS17mZocLQoyfiVF1JJUPQ=\");\n_c = Videogames;\nconst mapStateToProps = state => {\n  return {\n    allGames: state.filtered,\n    searchResult: state.searchResult\n  };\n};\nexport default connect(mapStateToProps, {\n  getAllGames,\n  getGenres,\n  searchByName\n})(Videogames);\nvar _c;\n$RefreshReg$(_c, \"Videogames\");","map":{"version":3,"names":["React","useState","useEffect","Link","Nav","SearchBar","Filter","connect","Pagination","getAllGames","getGenres","searchByName","imagen3","jsxDEV","_jsxDEV","Videogames","allGames","searchResult","_s","currentPage","setCurrentPage","cardPerPage","indexOfLastCard","indexOfFirstCard","currentCards","length","slice","paginate","pageNumber","className","children","fileName","_jsxFileName","lineNumber","columnNumber","totalCards","map","game","to","id","name","src","background_image","alt","rating","genres","e","index","_c","mapStateToProps","state","filtered","$RefreshReg$"],"sources":["C:/Users/mirko/Desktop/Proyecto Individual Mirko Miler FT-45B/Proyecto-Individual/PI-Videogames-main/client/src/components/Videogames/videogames.jsx"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import { Link } from 'react-router-dom';\r\n// import Nav from '../Nav/nav';\r\n// import SearchBar from '../SearchBar/searchbar';\r\n// import Filter from '../Filter/filter';\r\n// import { connect } from 'react-redux';\r\n// import Pagination from '../Pagination/pagination';\r\n// import { getAllGames, getGenres } from '../../redux/Actions/actions';\r\n// import imagen3 from '../../IMG/god-ofwar-4-4k-m7.jpg';\r\n// import './videogames.css';\r\n\r\n\r\n// function Videogames({ allGames, getAllGames, getGenres }) {\r\n//   const [currentPage, setCurrentPage] = useState(1);\r\n//   const [cardPerPage] = useState(4);\r\n\r\n//   const indexOfLastCard = currentPage * cardPerPage;\r\n//   const indexOfFirstCard = indexOfLastCard - cardPerPage;\r\n\r\n//   const currentCards = allGames.slice(indexOfFirstCard, indexOfLastCard);\r\n\r\n//   const paginate = (pageNumber) => {\r\n//     setCurrentPage(pageNumber);\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     getAllGames();\r\n//     getGenres();\r\n//   }, [getAllGames, getGenres]);\r\n\r\n//   return (\r\n//     <div className=\"Principal-container\">\r\n//       <Nav />\r\n//       <SearchBar />\r\n//       <Filter />\r\n \r\n//       <Pagination\r\n//         cardPerPage={cardPerPage}\r\n//         totalCards={allGames.length}\r\n//         paginate={paginate}\r\n//         currentPage={currentPage}\r\n//       />\r\n//       <div className=\"games-div\">\r\n//         {currentCards.length > 0 ? (\r\n//           currentCards.map((game) => (\r\n//             <Link key={game.id} to={`/details/${game.id}`}>\r\n//               <div className=\"game-card\">\r\n//                 <h2>{game.name}</h2>\r\n//                 <img\r\n//                   src={game.background_image}\r\n//                   alt={game.name}\r\n//                   className=\"game-card-img\"\r\n//                 />\r\n//                 <p>Rating: {game.rating}</p>\r\n//                 <p>Genres: {game.genres.map((e, index) => (\r\n//                   <span key={e.id}>\r\n//                     {game.genres.length > (index + 1) ? `${e.name}, ` : `${e.name}.`}\r\n//                   </span>\r\n//                 ))}\r\n//                 </p>\r\n//               </div>\r\n//             </Link>\r\n//           ))\r\n//         ) : (\r\n//           <p>No hay juegos para mostrar.</p>\r\n//         )}\r\n//       </div>\r\n\r\n//       <Pagination\r\n//         cardPerPage={cardPerPage}\r\n//         totalCards={allGames.length}\r\n//         paginate={paginate}\r\n//         currentPage={currentPage}\r\n//       />\r\n//       <img src={imagen3} alt=\"Banner\" className=\"banner-image\" />\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// const mapStateToProps = (state) => {\r\n//   return {\r\n//     allGames: state.filtered,\r\n//     searchResult: state.searchResult, \r\n//   };\r\n// };\r\n\r\n// export default connect(mapStateToProps, { getAllGames, getGenres })(Videogames);\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Nav from '../Nav/nav';\r\nimport SearchBar from '../SearchBar/searchbar';\r\nimport Filter from '../Filter/filter';\r\nimport { connect } from 'react-redux';\r\nimport Pagination from '../Pagination/pagination';\r\nimport { getAllGames, getGenres, searchByName } from '../../redux/Actions/actions';\r\nimport imagen3 from '../../IMG/god-ofwar-4-4k-m7.jpg';\r\nimport './videogames.css';\r\n\r\nfunction Videogames({ allGames, searchResult, getAllGames, getGenres, searchByName }) {\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [cardPerPage] = useState(4);\r\n\r\n  const indexOfLastCard = currentPage * cardPerPage;\r\n  const indexOfFirstCard = indexOfLastCard - cardPerPage;\r\n\r\n  const currentCards = (searchResult.length > 0 ? searchResult : allGames).slice(indexOfFirstCard, indexOfLastCard);\r\n\r\n  const paginate = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getAllGames();\r\n    getGenres();\r\n  }, [getAllGames, getGenres]);\r\n\r\n  return (\r\n    <div className=\"Principal-container\">\r\n      <Nav />\r\n      <SearchBar />\r\n      <Filter />\r\n\r\n      <Pagination\r\n        cardPerPage={cardPerPage}\r\n        totalCards={(searchResult.length > 0 ? searchResult : allGames).length}\r\n        paginate={paginate}\r\n        currentPage={currentPage}\r\n      />\r\n      <div className=\"games-div\">\r\n        {searchResult.length > 0 ? (\r\n          currentCards.map((game) => (\r\n            <Link key={game.id} to={`/details/${game.id}`}>\r\n              <div className=\"game-card\">\r\n                <h2>{game.name}</h2>\r\n                <img\r\n                  src={game.background_image}\r\n                  alt={game.name}\r\n                  className=\"game-card-img\"\r\n                />\r\n                <p>Rating: {game.rating}</p>\r\n                <p>Genres: {game.genres.map((e, index) => (\r\n                  <span key={e.id}>\r\n                    {game.genres.length > (index + 1) ? `${e.name}, ` : `${e.name}.`}\r\n                  </span>\r\n                ))}\r\n                </p>\r\n              </div>\r\n            </Link>\r\n          ))\r\n        ) : (\r\n          <p>No hay juegos para mostrar.</p>\r\n        )}\r\n      </div>\r\n\r\n      <Pagination\r\n        cardPerPage={cardPerPage}\r\n        totalCards={(searchResult.length > 0 ? searchResult : allGames).length}\r\n        paginate={paginate}\r\n        currentPage={currentPage}\r\n      />\r\n      <img src={imagen3} alt=\"Banner\" className=\"banner-image\" />\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    allGames: state.filtered,\r\n    searchResult: state.searchResult,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { getAllGames, getGenres, searchByName })(Videogames);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}