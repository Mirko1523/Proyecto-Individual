{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mirko\\\\Desktop\\\\Proyecto Individual Mirko Miler FT-45B\\\\Proyecto-Individual\\\\PI-Videogames-main\\\\client\\\\src\\\\components\\\\Details\\\\details.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport './details.css';\nimport image5 from '../../IMG/f9b67166545aee0783359c566fab740c.gif';\nimport image6 from '../../IMG/c080dcea703b81541d3249204dcca513578068ee_00.gif';\nimport image6rep from '../../IMG/c080dcea703b81541d3249204dcca513578068ee_00.gif';\nimport { getVideogameDetail } from '../../redux/Actions/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Details({\n  games,\n  getVideogameDetail\n}) {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [loading, setLoading] = useState(true);\n  const [game, setGame] = useState(null); // Utilizamos un estado para el juego\n\n  useEffect(() => {\n    setLoading(true);\n\n    // Llama a la acción para obtener los detalles del juego\n    getVideogameDetail(id).then(() => {\n      setLoading(false);\n    }).catch(error => {\n      console.error(\"Error al obtener los detalles del juego:\", error);\n      setLoading(false);\n    });\n  }, [id, getVideogameDetail]);\n  useEffect(() => {\n    // Actualiza el estado del juego cuando cambian los datos\n    setGame(games.find(game => game.id.toString() === id) || null);\n  }, [games, id]);\n  if (loading) {\n    // Muestra la pantalla de carga mientras se obtienen los detalles del juego\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-container\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this);\n  }\n  if (!game) {\n    // Muestra un mensaje si no se encuentra el juego\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No se encontr\\xF3 el juego.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Renderiza los detalles del juego\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-details\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: game.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: game.background_image,\n      alt: game.name,\n      className: \"game-details-img\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Rating: \", game.rating]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"G\\xE9neros: \", game.genres.map((genre, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n        children: game.genres.length > index + 1 ? `${genre.name}, ` : `${genre.name}.`\n      }, genre.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Fecha de lanzamiento\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), \": \", game.releaseDate || 'None']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), game.description && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Descripci\\xF3n\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this), \":\", /*#__PURE__*/_jsxDEV(\"span\", {\n        dangerouslySetInnerHTML: {\n          __html: game.description\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this), game.platforms && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Plataformas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this), \": \", typeof game.platforms === 'string' ? game.platforms : game.platforms.join(', ')]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_s(Details, \"mhqqQvky5HNztJBf3I9XuGT24gY=\", false, function () {\n  return [useParams];\n});\n_c = Details;\nconst mapStateToProps = state => {\n  return {\n    games: state.allGames.games || []\n  };\n};\nexport default connect(mapStateToProps, {\n  getVideogameDetail\n})(Details);\n\n// import React, { useEffect } from 'react';\n// import { connect, useSelector } from 'react-redux';\n// import { useParams } from 'react-router-dom';\n// import './details.css';  \n// import image5 from '../../IMG/f9b67166545aee0783359c566fab740c.gif';\n// import image6 from '../../IMG/c080dcea703b81541d3249204dcca513578068ee_00.gif';\n// import image6rep from '../../IMG/c080dcea703b81541d3249204dcca513578068ee_00.gif';\n// import { getVideogameDetail } from '../../redux/Actions/actions';\n\n// function Details({ getVideogameDetail }) {\n//   const { id } = useParams();\n// const { games } = useSelector((state) => state.allGames);\n// const filteredGames = games && games.games.filter((game) => game.id.toString() === id);\n//   const game = filteredGames && filteredGames.length > 0 ? filteredGames[0] : null;\n\n//   useEffect(() => {\n//    console.log('Detalles del juego en el estado global:', games);\n//   }, [id, games, getVideogameDetail]);\n\n//   console.log('Detalles del juego:', games);\n\n//   if (!game ) {\n//     return (\n//       <div>\n//         <div className=\"loading-container\">\n//           <img src={image6} alt='Kirby' className=\"kirby-image loading-gif2\" />\n//           <img src={image5} alt='Cargando...' className=\"loading-gif1\" />\n//           <img src={image6rep} alt='Kirby' className=\"kirby-image loading-gif3\" />\n//         </div>  \n//       </div>\n//     );\n//   }\n\n//   return (\n//     <div className=\"game-details\">\n//       <h2>{game.name}</h2>\n//       <img src={game.background_image} alt={game.name} className=\"game-details-img\" />\n//       <p>Rating: {game.rating}</p>\n//       <p>Géneros: {game.genres.map((e, index) => (\n//         <span key={e.id}>\n//           {game.genres.length > (index + 1) ? `${e.name}, ` : `${e.name}.`}\n//         </span>\n//       ))}\n//       </p>\n//       <p>\n//         <strong>Fecha de lanzamiento</strong>: {game.releaseDate || 'None'}\n//       </p>\n//       {game.description && (\n//         <p>\n//           <strong>Descripción</strong>: {game.description.replace(/(<([^>]+)>)/gi, '')}\n//         </p>\n//       )}\n//       {game.platforms && (\n//         <p>\n//           <strong>Plataformas</strong>: {typeof game.platforms === 'string' ? game.platforms : game.platforms.join(', ')}\n//         </p>\n//       )}\n\n//     </div>\n//   );\n// }\n\n// const mapStateToProps = (state) => {\n//   return {\n//     game: state.detail,\n//   };\n// };\n\n// export default connect(mapStateToProps, { getVideogameDetail })(Details);\n\n// import React, { useEffect } from 'react';\n// import { connect } from 'react-redux';\n// import { useParams } from 'react-router-dom';\n// import './details.css';\n// import image5 from '../../IMG/f9b67166545aee0783359c566fab740c.gif';\n// import image6 from '../../IMG/c080dcea703b81541d3249204dcca513578068ee_00.gif';\n// import image6rep from '../../IMG/c080dcea703b81541d3249204dcca513578068ee_00.gif';\n// import { getVideogameDetail } from '../../redux/Actions/actions';\n\n// function Details({ games, getVideogameDetail }) {\n//   const { id } = useParams();\n\n//   useEffect(() => {\n//     console.log('Detalles del juego en el estado global:', games );\n//     getVideogameDetail(id);\n//   }, [id, games, getVideogameDetail]);\n//   console.log('Detalles del juego:', games);\n\n//   const game = games.find((game) => game.id.toString() === id) || null;\n\n//   if (!game) {\n//     return (\n//       <div>\n//         <div className=\"loading-container\">\n//           <img src={image6} alt='Kirby' className=\"kirby-image loading-gif2\" />\n//           <img src={image5} alt='Cargando...' className=\"loading-gif1\" />\n//           <img src={image6rep} alt='Kirby' className=\"kirby-image loading-gif3\" />\n//         </div>\n//       </div>\n//     );\n//   }\n\n//   return (\n//     <div className=\"game-details\">\n//       <h2>{game.name}</h2>\n//       <img src={game.background_image} alt={game.name} className=\"game-details-img\" />\n//       <p>Rating: {game.rating}</p>\n//       <p>Géneros: {game.genres.map((e, index) => (\n//         <span key={e.id}>\n//           {game.genres.length > (index + 1) ? `${e.name}, ` : `${e.name}.`}\n//         </span>\n//       ))}\n//       </p>\n//       <p>\n//         <strong>Fecha de lanzamiento</strong>: {game.releaseDate || 'None'}\n//       </p>\n//       {game.description && (\n//         <p>\n//           <strong>Descripción</strong>: {game.description.replace(/(<([^>]+)>)/gi, '')}\n//         </p>\n//       )}\n//       {game.platforms && (\n//         <p>\n//           <strong>Plataformas</strong>: {typeof game.platforms === 'string' ? game.platforms : game.platforms.join(', ')}\n//         </p>\n//       )}\n//     </div>\n//   );\n// }\n\n// // const mapStateToProps = (state) => {\n// //   return {\n// //     games: state.games || [],\n// //   };\n// // };\n// const mapStateToProps = (state) => {\n//   return {\n//     games: state.allGames.games || [],\n//   };\n// };\n\n// export default connect(mapStateToProps, { getVideogameDetail })(Details);\nvar _c;\n$RefreshReg$(_c, \"Details\");","map":{"version":3,"names":["React","useEffect","useState","connect","useParams","image5","image6","image6rep","getVideogameDetail","jsxDEV","_jsxDEV","Details","games","_s","id","loading","setLoading","game","setGame","then","catch","error","console","find","toString","className","fileName","_jsxFileName","lineNumber","columnNumber","children","name","src","background_image","alt","rating","genres","map","genre","index","length","releaseDate","description","dangerouslySetInnerHTML","__html","platforms","join","_c","mapStateToProps","state","allGames","$RefreshReg$"],"sources":["C:/Users/mirko/Desktop/Proyecto Individual Mirko Miler FT-45B/Proyecto-Individual/PI-Videogames-main/client/src/components/Details/details.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { useParams } from 'react-router-dom';\r\nimport './details.css';\r\nimport image5 from '../../IMG/f9b67166545aee0783359c566fab740c.gif';\r\nimport image6 from '../../IMG/c080dcea703b81541d3249204dcca513578068ee_00.gif';\r\nimport image6rep from '../../IMG/c080dcea703b81541d3249204dcca513578068ee_00.gif';\r\nimport { getVideogameDetail } from '../../redux/Actions/actions';\r\n\r\nfunction Details({ games, getVideogameDetail }) {\r\n  const { id } = useParams();\r\n  const [loading, setLoading] = useState(true);\r\n  const [game, setGame] = useState(null); // Utilizamos un estado para el juego\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n\r\n    // Llama a la acción para obtener los detalles del juego\r\n    getVideogameDetail(id)\r\n      .then(() => {\r\n        setLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error al obtener los detalles del juego:\", error);\r\n        setLoading(false);\r\n      });\r\n  }, [id, getVideogameDetail]);\r\n\r\n  useEffect(() => {\r\n    // Actualiza el estado del juego cuando cambian los datos\r\n    setGame(games.find((game) => game.id.toString() === id) || null);\r\n  }, [games, id]);\r\n\r\n  if (loading) {\r\n    // Muestra la pantalla de carga mientras se obtienen los detalles del juego\r\n    return (\r\n      <div className=\"loading-container\">\r\n        {/* ... (código de carga) */}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!game) {\r\n    // Muestra un mensaje si no se encuentra el juego\r\n    return <div>No se encontró el juego.</div>;\r\n  }\r\n\r\n  // Renderiza los detalles del juego\r\n  return (\r\n    <div className=\"game-details\">\r\n      <h2>{game.name}</h2>\r\n      <img src={game.background_image} alt={game.name} className=\"game-details-img\" />\r\n      <p>Rating: {game.rating}</p>\r\n      <p>Géneros: {game.genres.map((genre, index) => (\r\n        <span key={genre.id}>\r\n          {game.genres.length > (index + 1) ? `${genre.name}, ` : `${genre.name}.`}\r\n        </span>\r\n      ))}\r\n      </p>\r\n      <p>\r\n        <strong>Fecha de lanzamiento</strong>: {game.releaseDate || 'None'}\r\n      </p>\r\n      {game.description && (\r\n        <p>\r\n          <strong>Descripción</strong>: \r\n          <span dangerouslySetInnerHTML={{ __html: game.description }} />\r\n        </p>\r\n      )}\r\n      {game.platforms && (\r\n        <p>\r\n          <strong>Plataformas</strong>: {typeof game.platforms === 'string' ? game.platforms : game.platforms.join(', ')}\r\n        </p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    games: state.allGames.games || [],\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { getVideogameDetail })(Details);\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useEffect } from 'react';\r\n// import { connect, useSelector } from 'react-redux';\r\n// import { useParams } from 'react-router-dom';\r\n// import './details.css';  \r\n// import image5 from '../../IMG/f9b67166545aee0783359c566fab740c.gif';\r\n// import image6 from '../../IMG/c080dcea703b81541d3249204dcca513578068ee_00.gif';\r\n// import image6rep from '../../IMG/c080dcea703b81541d3249204dcca513578068ee_00.gif';\r\n// import { getVideogameDetail } from '../../redux/Actions/actions';\r\n\r\n// function Details({ getVideogameDetail }) {\r\n//   const { id } = useParams();\r\n// const { games } = useSelector((state) => state.allGames);\r\n// const filteredGames = games && games.games.filter((game) => game.id.toString() === id);\r\n//   const game = filteredGames && filteredGames.length > 0 ? filteredGames[0] : null;\r\n\r\n//   useEffect(() => {\r\n//    console.log('Detalles del juego en el estado global:', games);\r\n//   }, [id, games, getVideogameDetail]);\r\n\r\n//   console.log('Detalles del juego:', games);\r\n\r\n//   if (!game ) {\r\n//     return (\r\n//       <div>\r\n//         <div className=\"loading-container\">\r\n//           <img src={image6} alt='Kirby' className=\"kirby-image loading-gif2\" />\r\n//           <img src={image5} alt='Cargando...' className=\"loading-gif1\" />\r\n//           <img src={image6rep} alt='Kirby' className=\"kirby-image loading-gif3\" />\r\n//         </div>  \r\n//       </div>\r\n//     );\r\n//   }\r\n\r\n\r\n\r\n//   return (\r\n//     <div className=\"game-details\">\r\n//       <h2>{game.name}</h2>\r\n//       <img src={game.background_image} alt={game.name} className=\"game-details-img\" />\r\n//       <p>Rating: {game.rating}</p>\r\n//       <p>Géneros: {game.genres.map((e, index) => (\r\n//         <span key={e.id}>\r\n//           {game.genres.length > (index + 1) ? `${e.name}, ` : `${e.name}.`}\r\n//         </span>\r\n//       ))}\r\n//       </p>\r\n//       <p>\r\n//         <strong>Fecha de lanzamiento</strong>: {game.releaseDate || 'None'}\r\n//       </p>\r\n//       {game.description && (\r\n//         <p>\r\n//           <strong>Descripción</strong>: {game.description.replace(/(<([^>]+)>)/gi, '')}\r\n//         </p>\r\n//       )}\r\n//       {game.platforms && (\r\n//         <p>\r\n//           <strong>Plataformas</strong>: {typeof game.platforms === 'string' ? game.platforms : game.platforms.join(', ')}\r\n//         </p>\r\n//       )}\r\n      \r\n\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// const mapStateToProps = (state) => {\r\n//   return {\r\n//     game: state.detail,\r\n//   };\r\n// };\r\n\r\n// export default connect(mapStateToProps, { getVideogameDetail })(Details);\r\n\r\n\r\n// import React, { useEffect } from 'react';\r\n// import { connect } from 'react-redux';\r\n// import { useParams } from 'react-router-dom';\r\n// import './details.css';\r\n// import image5 from '../../IMG/f9b67166545aee0783359c566fab740c.gif';\r\n// import image6 from '../../IMG/c080dcea703b81541d3249204dcca513578068ee_00.gif';\r\n// import image6rep from '../../IMG/c080dcea703b81541d3249204dcca513578068ee_00.gif';\r\n// import { getVideogameDetail } from '../../redux/Actions/actions';\r\n\r\n// function Details({ games, getVideogameDetail }) {\r\n//   const { id } = useParams();\r\n\r\n//   useEffect(() => {\r\n//     console.log('Detalles del juego en el estado global:', games );\r\n//     getVideogameDetail(id);\r\n//   }, [id, games, getVideogameDetail]);\r\n//   console.log('Detalles del juego:', games);\r\n\r\n//   const game = games.find((game) => game.id.toString() === id) || null;\r\n\r\n//   if (!game) {\r\n//     return (\r\n//       <div>\r\n//         <div className=\"loading-container\">\r\n//           <img src={image6} alt='Kirby' className=\"kirby-image loading-gif2\" />\r\n//           <img src={image5} alt='Cargando...' className=\"loading-gif1\" />\r\n//           <img src={image6rep} alt='Kirby' className=\"kirby-image loading-gif3\" />\r\n//         </div>\r\n//       </div>\r\n//     );\r\n//   }\r\n\r\n//   return (\r\n//     <div className=\"game-details\">\r\n//       <h2>{game.name}</h2>\r\n//       <img src={game.background_image} alt={game.name} className=\"game-details-img\" />\r\n//       <p>Rating: {game.rating}</p>\r\n//       <p>Géneros: {game.genres.map((e, index) => (\r\n//         <span key={e.id}>\r\n//           {game.genres.length > (index + 1) ? `${e.name}, ` : `${e.name}.`}\r\n//         </span>\r\n//       ))}\r\n//       </p>\r\n//       <p>\r\n//         <strong>Fecha de lanzamiento</strong>: {game.releaseDate || 'None'}\r\n//       </p>\r\n//       {game.description && (\r\n//         <p>\r\n//           <strong>Descripción</strong>: {game.description.replace(/(<([^>]+)>)/gi, '')}\r\n//         </p>\r\n//       )}\r\n//       {game.platforms && (\r\n//         <p>\r\n//           <strong>Plataformas</strong>: {typeof game.platforms === 'string' ? game.platforms : game.platforms.join(', ')}\r\n//         </p>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// // const mapStateToProps = (state) => {\r\n// //   return {\r\n// //     games: state.games || [],\r\n// //   };\r\n// // };\r\n// const mapStateToProps = (state) => {\r\n//   return {\r\n//     games: state.allGames.games || [],\r\n//   };\r\n// };\r\n\r\n// export default connect(mapStateToProps, { getVideogameDetail })(Details);\r\n\r\n\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,OAAO,QAAQ,aAAa;AACrC,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAO,eAAe;AACtB,OAAOC,MAAM,MAAM,gDAAgD;AACnE,OAAOC,MAAM,MAAM,2DAA2D;AAC9E,OAAOC,SAAS,MAAM,2DAA2D;AACjF,SAASC,kBAAkB,QAAQ,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjE,SAASC,OAAOA,CAAC;EAAEC,KAAK;EAAEJ;AAAmB,CAAC,EAAE;EAAAK,EAAA;EAC9C,MAAM;IAAEC;EAAG,CAAC,GAAGV,SAAS,CAAC,CAAC;EAC1B,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACe,IAAI,EAAEC,OAAO,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAExCD,SAAS,CAAC,MAAM;IACde,UAAU,CAAC,IAAI,CAAC;;IAEhB;IACAR,kBAAkB,CAACM,EAAE,CAAC,CACnBK,IAAI,CAAC,MAAM;MACVH,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC,CACDI,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACD,KAAK,CAAC,0CAA0C,EAAEA,KAAK,CAAC;MAChEL,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC;EACN,CAAC,EAAE,CAACF,EAAE,EAAEN,kBAAkB,CAAC,CAAC;EAE5BP,SAAS,CAAC,MAAM;IACd;IACAiB,OAAO,CAACN,KAAK,CAACW,IAAI,CAAEN,IAAI,IAAKA,IAAI,CAACH,EAAE,CAACU,QAAQ,CAAC,CAAC,KAAKV,EAAE,CAAC,IAAI,IAAI,CAAC;EAClE,CAAC,EAAE,CAACF,KAAK,EAAEE,EAAE,CAAC,CAAC;EAEf,IAAIC,OAAO,EAAE;IACX;IACA,oBACEL,OAAA;MAAKe,SAAS,EAAC;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAE7B,CAAC;EAEV;EAEA,IAAI,CAACZ,IAAI,EAAE;IACT;IACA,oBAAOP,OAAA;MAAAoB,QAAA,EAAK;IAAwB;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC5C;;EAEA;EACA,oBACEnB,OAAA;IAAKe,SAAS,EAAC,cAAc;IAAAK,QAAA,gBAC3BpB,OAAA;MAAAoB,QAAA,EAAKb,IAAI,CAACc;IAAI;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACpBnB,OAAA;MAAKsB,GAAG,EAAEf,IAAI,CAACgB,gBAAiB;MAACC,GAAG,EAAEjB,IAAI,CAACc,IAAK;MAACN,SAAS,EAAC;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAChFnB,OAAA;MAAAoB,QAAA,GAAG,UAAQ,EAACb,IAAI,CAACkB,MAAM;IAAA;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC5BnB,OAAA;MAAAoB,QAAA,GAAG,cAAS,EAACb,IAAI,CAACmB,MAAM,CAACC,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBACxC7B,OAAA;QAAAoB,QAAA,EACGb,IAAI,CAACmB,MAAM,CAACI,MAAM,GAAID,KAAK,GAAG,CAAE,GAAI,GAAED,KAAK,CAACP,IAAK,IAAG,GAAI,GAAEO,KAAK,CAACP,IAAK;MAAE,GAD/DO,KAAK,CAACxB,EAAE;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEb,CACP,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACJnB,OAAA;MAAAoB,QAAA,gBACEpB,OAAA;QAAAoB,QAAA,EAAQ;MAAoB;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,MAAE,EAACZ,IAAI,CAACwB,WAAW,IAAI,MAAM;IAAA;MAAAf,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjE,CAAC,EACHZ,IAAI,CAACyB,WAAW,iBACfhC,OAAA;MAAAoB,QAAA,gBACEpB,OAAA;QAAAoB,QAAA,EAAQ;MAAW;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,KAC5B,eAAAnB,OAAA;QAAMiC,uBAAuB,EAAE;UAAEC,MAAM,EAAE3B,IAAI,CAACyB;QAAY;MAAE;QAAAhB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9D,CACJ,EACAZ,IAAI,CAAC4B,SAAS,iBACbnC,OAAA;MAAAoB,QAAA,gBACEpB,OAAA;QAAAoB,QAAA,EAAQ;MAAW;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,MAAE,EAAC,OAAOZ,IAAI,CAAC4B,SAAS,KAAK,QAAQ,GAAG5B,IAAI,CAAC4B,SAAS,GAAG5B,IAAI,CAAC4B,SAAS,CAACC,IAAI,CAAC,IAAI,CAAC;IAAA;MAAApB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7G,CACJ;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAAChB,EAAA,CAlEQF,OAAO;EAAA,QACCP,SAAS;AAAA;AAAA2C,EAAA,GADjBpC,OAAO;AAoEhB,MAAMqC,eAAe,GAAIC,KAAK,IAAK;EACjC,OAAO;IACLrC,KAAK,EAAEqC,KAAK,CAACC,QAAQ,CAACtC,KAAK,IAAI;EACjC,CAAC;AACH,CAAC;AAED,eAAeT,OAAO,CAAC6C,eAAe,EAAE;EAAExC;AAAmB,CAAC,CAAC,CAACG,OAAO,CAAC;;AAMxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,IAAAoC,EAAA;AAAAI,YAAA,CAAAJ,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}