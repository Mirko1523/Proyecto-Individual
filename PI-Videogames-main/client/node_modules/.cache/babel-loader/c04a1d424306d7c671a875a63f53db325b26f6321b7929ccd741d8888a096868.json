{"ast":null,"code":"const initialState = {\n  gamesBackUp: [],\n  gameDetails: {},\n  genres: [],\n  filtered: []\n};\nexport default function rootReducer(state = initialState, action) {\n  switch (action.type) {\n    case 'GET_ALL_GAMES':\n      return {\n        ...state,\n        gamesBackUp: action.payload,\n        filtered: action.payload\n      };\n    case 'CLEAN':\n      return {\n        ...state,\n        gameDetails: {}\n      };\n    case 'VOLVER_A_HOME':\n      return {\n        ...state,\n        filtered: state.gamesBackUp\n      };\n    case 'GET_VIDEOGAME_DETAIL':\n      return {\n        ...state,\n        gameDetails: action.payload\n      };\n    case 'SEARCH_BY_NAME':\n      return {\n        ...state,\n        filtered: action.payload\n      };\n    case 'GET_GENRES':\n      return {\n        ...state,\n        genres: action.payload\n      };\n    case 'FILTER_BY':\n      if (action.payload === 'default') {\n        return {\n          ...state,\n          filtered: state.gamesBackUp\n        };\n      }\n      if (action.payload === 'DB') {\n        return {\n          ...state,\n          filtered: state.gamesBackUp.filter(game => typeof game.id === 'string')\n        };\n      }\n      if (action.payload === 'API') {\n        return {\n          ...state,\n          filtered: state.gamesBackUp.filter(game => typeof game.id === 'number')\n        };\n      }\n      return {\n        ...state,\n        filtered: state.gamesBackUp.filter(game => game.genres.find(genre => genre === action.payload))\n      };\n    case 'ORDER_BY':\n      if (action.payload === 'A-Z') {\n        return {\n          ...state,\n          filtered: [...state.filtered].sort((prev, next) => prev.name > next.name ? 1 : -1)\n        };\n      }\n      if (action.payload === 'Z-A') {\n        return {\n          ...state,\n          filtered: [...state.filtered].sort((prev, next) => prev.name > next.name ? -1 : 1)\n        };\n      }\n      if (action.payload === 'desc') {\n        return {\n          ...state,\n          filtered: [...state.filtered].sort((prev, next) => prev.rating - next.rating)\n        };\n      }\n      if (action.payload === 'asc') {\n        return {\n          ...state,\n          filtered: [...state.filtered].sort((prev, next) => next.rating - prev.rating)\n        };\n      }\n      return {\n        ...state,\n        filtered: state.gamesBackUp\n      };\n    default:\n      return state;\n  }\n}","map":{"version":3,"names":["initialState","gamesBackUp","gameDetails","genres","filtered","rootReducer","state","action","type","payload","filter","game","id","find","genre","sort","prev","next","name","rating"],"sources":["C:/Users/mirko/Desktop/Proyecto Individual Mirko Miler FT-45B/Proyecto-Individual/PI-Videogames-main/client/src/redux/reducers.js"],"sourcesContent":["const initialState = {\r\n  gamesBackUp: [],\r\n  gameDetails: {},\r\n  genres: [],\r\n  filtered: [],\r\n};\r\n\r\nexport default function rootReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case 'GET_ALL_GAMES':\r\n      return {\r\n        ...state,\r\n        gamesBackUp: action.payload,\r\n        filtered: action.payload,\r\n      };\r\n\r\n    case 'CLEAN':\r\n      return {\r\n        ...state,\r\n        gameDetails: {},\r\n      };\r\n\r\n    case 'VOLVER_A_HOME':\r\n      return {\r\n        ...state,\r\n        filtered: state.gamesBackUp,\r\n      };\r\n\r\n    case 'GET_VIDEOGAME_DETAIL':\r\n      return {\r\n        ...state,\r\n        gameDetails: action.payload,\r\n      };\r\n\r\n    case 'SEARCH_BY_NAME':\r\n      return {\r\n        ...state,\r\n        filtered: action.payload,\r\n      };\r\n\r\n    case 'GET_GENRES':\r\n      return {\r\n        ...state,\r\n        genres: action.payload,\r\n      };\r\n\r\n    case 'FILTER_BY':\r\n      if (action.payload === 'default') {\r\n        return { ...state, filtered: state.gamesBackUp };\r\n      }\r\n\r\n      if (action.payload === 'DB') {\r\n        return {\r\n          ...state,\r\n          filtered: state.gamesBackUp.filter((game) => typeof game.id === 'string'),\r\n        };\r\n      }\r\n\r\n      if (action.payload === 'API') {\r\n        return {\r\n          ...state,\r\n          filtered: state.gamesBackUp.filter((game) => typeof game.id === 'number'),\r\n        };\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        filtered: state.gamesBackUp.filter((game) =>\r\n          game.genres.find((genre) => genre === action.payload)\r\n        ),\r\n      };\r\n\r\n    case 'ORDER_BY':\r\n      if (action.payload === 'A-Z') {\r\n        return {\r\n          ...state,\r\n          filtered: [...state.filtered].sort((prev, next) => (prev.name > next.name ? 1 : -1)),\r\n        };\r\n      }\r\n\r\n      if (action.payload === 'Z-A') {\r\n        return {\r\n          ...state,\r\n          filtered: [...state.filtered].sort((prev, next) => (prev.name > next.name ? -1 : 1)),\r\n        };\r\n      }\r\n\r\n      if (action.payload === 'desc') {\r\n        return {\r\n          ...state,\r\n          filtered: [...state.filtered].sort((prev, next) => prev.rating - next.rating),\r\n        };\r\n      }\r\n\r\n      if (action.payload === 'asc') {\r\n        return {\r\n          ...state,\r\n          filtered: [...state.filtered].sort((prev, next) => next.rating - prev.rating),\r\n        };\r\n      }\r\n\r\n      return { ...state, filtered: state.gamesBackUp };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}