{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mirko\\\\Desktop\\\\Proyecto Individual Mirko Miler FT-45B\\\\Proyecto-Individual\\\\PI-Videogames-main\\\\client\\\\src\\\\components\\\\Videogames\\\\videogames.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport NavBar from '../NavBar/NavBar';\nimport SearchBar from '../SearchBar/searchbar';\nimport { connect } from 'react-redux';\nimport Videogame from '../Videogamelist/videogamelist';\nimport Pagination from '../Pagination/pagination';\nimport FilteredBy from '../FilterBy/FilterBy';\nimport { getAllGames, getGenres } from '../../redux/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Videogames({\n  allGames,\n  getAllGames,\n  getGenres\n}) {\n  _s();\n  const [currentPage, setCurrentPage] = useState(1);\n  const [cardPerPage] = useState(15);\n\n  //* indices de la paginación:\n  const indexOfLastCard = currentPage * cardPerPage;\n  const indexOfFirstCard = indexOfLastCard - cardPerPage;\n  var currentCards; //\"cards\" que se deben mostrar en la pantalla\n\n  // en caso de que al buscar un juego en particular no encuentra ninguno\n  if (typeof allGames === 'string') {\n    currentCards = allGames;\n  } else {\n    currentCards = allGames.slice(indexOfFirstCard, indexOfLastCard); //uso los indices para \"fraccionar que juegos muestro\"\n  }\n  const paginate = pageNumber => {\n    setCurrentPage(pageNumber);\n  };\n  useEffect(() => {\n    getAllGames();\n    getGenres();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(SearchBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(FilteredBy, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      cardPerPage: cardPerPage,\n      totalCards: allGames.length,\n      paginate: paginate,\n      currentPage: currentPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"games-div\",\n      children: currentCards.length > 1 ? currentCards.map(g => /*#__PURE__*/_jsxDEV(Videogame, {\n        name: g.name,\n        rating: g.rating,\n        genres: g.genres,\n        image: g.background_image,\n        id: g.id\n      }, g.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 15\n      }, this)) : typeof currentCards === \"string\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"nonono\",\n          src: notFound,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"loading\",\n          src: loading,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      cardPerPage: cardPerPage,\n      totalCards: allGames.length,\n      paginate: paginate,\n      currentPage: currentPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 7\n  }, this);\n}\n_s(Videogames, \"yzrnDe8ObmuiXlK7nRIX8d0adAo=\");\n_c = Videogames;\nconst mapStateToProps = state => {\n  return {\n    allGames: state.filtered\n  };\n};\nexport default connect(mapStateToProps, {\n  getAllGames,\n  getGenres\n})(Videogames);\nvar _c;\n$RefreshReg$(_c, \"Videogames\");","map":{"version":3,"names":["React","useState","useEffect","NavBar","SearchBar","connect","Videogame","Pagination","FilteredBy","getAllGames","getGenres","jsxDEV","_jsxDEV","Videogames","allGames","_s","currentPage","setCurrentPage","cardPerPage","indexOfLastCard","indexOfFirstCard","currentCards","slice","paginate","pageNumber","className","children","fileName","_jsxFileName","lineNumber","columnNumber","totalCards","length","map","g","name","rating","genres","image","background_image","id","src","notFound","alt","loading","_c","mapStateToProps","state","filtered","$RefreshReg$"],"sources":["C:/Users/mirko/Desktop/Proyecto Individual Mirko Miler FT-45B/Proyecto-Individual/PI-Videogames-main/client/src/components/Videogames/videogames.jsx"],"sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport NavBar from '../NavBar/NavBar'\r\nimport SearchBar from '../SearchBar/searchbar'\r\nimport { connect } from 'react-redux'\r\nimport Videogame from '../Videogamelist/videogamelist'\r\nimport Pagination from '../Pagination/pagination'\r\nimport FilteredBy from '../FilterBy/FilterBy'\r\nimport { getAllGames, getGenres } from '../../redux/actions'\r\n\r\n\r\nfunction Videogames({allGames, getAllGames, getGenres }) {\r\n\r\n    const [currentPage, setCurrentPage] = useState(1)\r\n\r\n    const [cardPerPage] = useState(15)\r\n\r\n    //* indices de la paginación:\r\n    const indexOfLastCard = currentPage * cardPerPage\r\n    const indexOfFirstCard = indexOfLastCard - cardPerPage;\r\n\r\n    var currentCards; //\"cards\" que se deben mostrar en la pantalla\r\n\r\n    // en caso de que al buscar un juego en particular no encuentra ninguno\r\n    if(typeof allGames === 'string'){\r\n        currentCards = allGames\r\n    }else {\r\n        currentCards = allGames.slice(indexOfFirstCard, indexOfLastCard) //uso los indices para \"fraccionar que juegos muestro\"\r\n    }\r\n    \r\n    const paginate = (pageNumber) => {\r\n         setCurrentPage(pageNumber)\r\n    }\r\n\r\n    useEffect (() => {\r\n        getAllGames()\r\n        getGenres()\r\n    }, [])\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <NavBar />\r\n        <SearchBar />\r\n        <FilteredBy />\r\n        <Pagination\r\n          cardPerPage={cardPerPage}\r\n          totalCards={allGames.length}\r\n          paginate={paginate}\r\n          currentPage={currentPage}\r\n        />\r\n        <div className=\"games-div\">\r\n          {currentCards.length > 1 ? (\r\n            currentCards.map((g) => (\r\n              <Videogame\r\n                key={g.id}\r\n                name={g.name}\r\n                rating={g.rating}\r\n                genres={g.genres}\r\n                image={g.background_image}\r\n                id={g.id}\r\n              />\r\n            ))\r\n          ) : typeof currentCards === \"string\" ? (\r\n            <div>\r\n              <img className=\"nonono\" src={notFound} alt=\"\"></img>\r\n            </div>\r\n          ) : (\r\n            <div>\r\n              <img className=\"loading\" src={loading} alt=\"\"></img>\r\n            </div>\r\n          )}\r\n        </div>\r\n        <Pagination\r\n          cardPerPage={cardPerPage}\r\n          totalCards={allGames.length}\r\n          paginate={paginate}\r\n          currentPage={currentPage}\r\n        />\r\n      </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        allGames: state.filtered\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,{ getAllGames, getGenres }) (Videogames)"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}